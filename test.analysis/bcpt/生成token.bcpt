<?xml version="1.0" encoding="UTF-8"?>

<Component>
  <Id>1</Id>
  <UUID>8F6878FF32E64D7981DBCB5C0C8CD98D</UUID>
  <Level>1</Level>
  <Quote>1</Quote>
  <Desp>生成token</Desp>
  <RefImpl>tokenGenerate</RefImpl>
  <Auth></Auth>
  <ReadOnly>0</ReadOnly>
  <ToolTip></ToolTip>
  <InArgs>
    <Arg>
      <Key>playloadDict</Key>
      <Desp>需要放进token里的值（字典）</Desp>
      <DefValue>__REQ__["playloadDict"]</DefValue>
      <IsArray>false</IsArray>
      <Combos/>
    </Arg>
  </InArgs>
  <OutArgs>
    <Arg>
      <Key>aumsToken</Key>
      <Desp>token字符串</Desp>
      <DefValue>__REQ__["aumsToken"]</DefValue>
      <IsArray>false</IsArray>
      <Combos/>
    </Arg>
  </OutArgs>
  <Implementation>
    <Node>
      <Id>2</Id>
      <Name>正常结束</Name>
      <Desp>正常结束</Desp>
      <Sql></Sql>
      <Type>3</Type>
      <Target>END</Target>
      <Style>0</Style>
      <Tooltip>正常结束</Tooltip>
      <Visible>1</Visible>
      <Collapse>0</Collapse>
      <Constraint>
        <Location>720,1440</Location>
        <Size>63,63</Size>
      </Constraint>
      <SourceConnections/>
      <InArgs/>
      <OutArgs/>
      <Logic>
        <Total>0</Total>
      </Logic>
    </Node>
    <Node>
      <Id>3</Id>
      <Name>异常结束</Name>
      <Desp>异常结束</Desp>
      <Sql></Sql>
      <Type>4</Type>
      <Target>END</Target>
      <Style>0</Style>
      <Tooltip>异常结束</Tooltip>
      <Visible>1</Visible>
      <Collapse>0</Collapse>
      <Constraint>
        <Location>217,540</Location>
        <Size>63,63</Size>
      </Constraint>
      <SourceConnections/>
      <InArgs/>
      <OutArgs/>
      <Logic>
        <Total>0</Total>
      </Logic>
    </Node>
    <Node>
      <Id>4</Id>
      <Name>开始</Name>
      <Desp>开始</Desp>
      <Type>2</Type>
      <Target>Begin</Target>
      <Style>0</Style>
      <Tooltip>开始</Tooltip>
      <Visible>null</Visible>
      <Collapse>0</Collapse>
      <Constraint>
        <Location>420,40</Location>
        <Size>63,63</Size>
      </Constraint>
      <SourceConnections>
        <Connection>
          <targetId>7</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>1</Name>
          <Desp>锚点一</Desp>
        </Terminal>
      </Terminals>
      <InArgs/>
      <OutArgs/>
      <Logic>
        <Total>1</Total>
        <RET1>7</RET1>
      </Logic>
    </Node>
    <Node>
      <Id>7</Id>
      <Name>默认逻辑错误委托</Name>
      <Desp>默认逻辑错误委托</Desp>
      <Type>6</Type>
      <Target>DefaultException</Target>
      <Style>2</Style>
      <Tooltip>默认逻辑错误委托</Tooltip>
      <Visible>1</Visible>
      <Collapse>2</Collapse>
      <Constraint>
        <Location>372,220</Location>
        <Size>160,46</Size>
      </Constraint>
      <SourceConnections>
        <Connection>
          <targetId>10</targetId>
          <SourceTerminal>0</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
        <Connection>
          <targetId>19</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs/>
      <OutArgs/>
      <Logic>
        <Total>2</Total>
        <RET0>10</RET0>
        <RET1>19</RET1>
      </Logic>
    </Node>
    <Node>
      <Ref>662DB2424732FACDF3B99CFF9D82022E</Ref>
      <Id>10</Id>
      <Name>取全局错误到容器</Name>
      <Desp>取全局错误到容器</Desp>
      <Level>0</Level>
      <Group>平台内嵌类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>cn.com.agree.afa.jcomponent.GlobalErrorHolder.putGlobalErrorToDict</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/平台内嵌类组件/取全局错误到容器.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>取全局错误到容器</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>257,356</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>3</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>装载所要获取的全局错误的JavaDict容器</Name>
          <Key>dict</Key>
          <Arg>__REQ__</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaDict</Type>
        </Arg>
        <Arg>
          <Name>错误类型对应的关键字Key</Name>
          <Key>errorTypeKey</Key>
          <Arg>"p_excptype"</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
        <Arg>
          <Name>错误代码对应的关键字Key</Name>
          <Key>errorCodeKey</Key>
          <Arg>"p_ret_code"</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
        <Arg>
          <Name>错误信息对应的关键字Key</Name>
          <Key>errorMsgKey</Key>
          <Arg>"p_ret_desc"</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </InArgs>
      <OutArgs/>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>3</RET1>
      </Logic>
    </Node>
    <Node>
      <Ref>C66D34E5490B981A0C6454FE813E25BF</Ref>
      <Id>18</Id>
      <Name>容器变量赋值</Name>
      <Desp>jwt头赋值</Desp>
      <Level>0</Level>
      <Group>字典处理类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_Dict.setValue</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/字典处理类组件/容器变量赋值.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>容器变量赋值</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>660,440</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>20</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>请求容器</Name>
          <Key>inContext</Key>
          <Arg>__REQ__["aumsJWT_header"]</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaDict</Type>
        </Arg>
        <Arg>
          <Name>变量赋值列表，如：[[key1,value1],[key2,value2],[key3,value3]...]</Name>
          <Key>paramList</Key>
          <Arg>[ 
["typ","JWT"],
["alg","SHA256"]
]</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaList</Type>
        </Arg>
      </InArgs>
      <OutArgs/>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>20</RET1>
      </Logic>
    </Node>
    <Node>
      <Ref>443D4B7D06AFEAAFD3B8DE82371A6C5F</Ref>
      <Id>19</Id>
      <Name>创建信息的数据对象</Name>
      <Desp>创建信息的数据对象</Desp>
      <Level>0</Level>
      <Group>对象操作类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_Object.createObject</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/对象操作类组件/创建信息的数据对象.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>按照数据对象的描述list创建数据对象,数据对象描述list的格式为[["名称",类型(list/dict/tuple)], ...]</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>600,340</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>18</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>数据字典容器</Name>
          <Key>argContext</Key>
          <Arg>__REQ__</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaDict</Type>
        </Arg>
        <Arg>
          <Name>数据对象描述list</Name>
          <Key>dataObjList</Key>
          <Arg>[
["aumsJWT_header",{}],
["aumsJWT_playload",{}]
]</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaList</Type>
        </Arg>
      </InArgs>
      <OutArgs/>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>18</RET1>
      </Logic>
    </Node>
    <Node>
      <UUID>49F6A76B6D1748378FE249CDD7DC6358</UUID>
      <Ref>C56E164A2B37D4437F266355C7A8B35A</Ref>
      <Id>20</Id>
      <Name>容器间变量参数化拷贝</Name>
      <Desp>容器间变量参数化拷贝</Desp>
      <Level>0</Level>
      <Group>字典处理类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_Dict.copy</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/字典处理类组件/容器间变量参数化拷贝.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>拷贝映射字典中的变量到另外一个容器中,可全量拷贝,如果原容器没有的,则跳过不拷贝继续处理下面字典</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>677,549</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>21</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>源容器</Name>
          <Key>__SRC__</Key>
          <Arg>__REQ__["playloadDict"]</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaDict</Type>
        </Arg>
        <Arg>
          <Name>目的容器</Name>
          <Key>__DCT__</Key>
          <Arg>__REQ__["aumsJWT_playload"]</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaDict</Type>
        </Arg>
        <Arg>
          <Name>[['源key名称','目的key名称'],...]或字符串,如果strOrList为String类型,则进行匹配拷贝,如果为空则根据深度全量拷贝</Name>
          <Key>strOrList</Key>
          <Level>4</Level>
          <Type>java.lang.Object</Type>
        </Arg>
        <Arg>
          <Name>拷贝类型[null是基础类型(非JavaList/JavaDict),list是JavaList/JavaDict类型的列表,如果typelist为空JavaList则全量拷贝]</Name>
          <Key>typeList</Key>
          <Arg>[]</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaList</Type>
        </Arg>
      </InArgs>
      <OutArgs/>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>21</RET1>
      </Logic>
    </Node>
    <Node>
      <UUID>9D203FB4E23E410A92BE3C5AC4222086</UUID>
      <Ref>AB9FBD624ECC7C8FCA96949DE5FE974C</Ref>
      <Id>21</Id>
      <Name>参数化取当前日期时间</Name>
      <Desp>参数化取当前日期时间</Desp>
      <Level>0</Level>
      <Group>时间判断类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_Time.getFormatTime</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/时间判断类组件/参数化取当前日期时间.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>根据输入的日期时间类型来参数化获取日期时间串,如果format为timestamp,则返回20位的时间戳,如果输入long,则返回相对于UTC时间的秒数</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>660,660</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>22</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>日期时间格式串</Name>
          <Key>format</Key>
          <Arg>"timestamp"</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </InArgs>
      <OutArgs>
        <Arg>
          <Name>获取的日期时间</Name>
          <Key>datetime</Key>
          <Arg>__REQ__["aumsJWT_playload"]["iat"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </OutArgs>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>22</RET1>
      </Logic>
    </Node>
    <Node>
      <UUID>12C2DF52FF694672A15135BBBD74CA6D</UUID>
      <Ref>F9E31FE1E6DB00D525A37D5BB46E6EFC</Ref>
      <Id>22</Id>
      <Name>参数化累加时间</Name>
      <Desp>参数化累加时间</Desp>
      <Level>0</Level>
      <Group>时间判断类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_Time.formatCalculateTime</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/时间判断类组件/参数化累加时间.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>根据输入的源日期时间,要累加的时间和时间单位进行计算出目标时间,单位支持秒,分钟,小时和天,如果是减少的话则add_time为负数</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>660,780</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>6</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>源时间(YYYYMMDDHHMMSSxxx,支持8位,14位和20位日期格式)</Name>
          <Key>srctime</Key>
          <Arg>__REQ__["aumsJWT_playload"]["iat"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
        <Arg>
          <Name>累加的时间</Name>
          <Key>addtime</Key>
          <Arg>2</Arg>
          <Level>4</Level>
          <Type>long</Type>
        </Arg>
        <Arg>
          <Name>时间单位(seconds/minutes/hours/days)</Name>
          <Key>timeunit</Key>
          <Arg>"hours"</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </InArgs>
      <OutArgs>
        <Arg>
          <Name>计算出的时间</Name>
          <Key>dsttime</Key>
          <Arg>__REQ__["aumsJWT_playload"]["exp"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </OutArgs>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>6</RET1>
      </Logic>
    </Node>
    <Node>
      <UUID>CEE693282503465EB1D334E2399A0A9E</UUID>
      <Ref>DCB4A4960D907C3B5B64BBA8372B8E71</Ref>
      <Id>1</Id>
      <Name>bas64编码</Name>
      <Desp>bas64编码</Desp>
      <Level>0</Level>
      <Group>解编码类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_CodecTools.b64Encode</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/解编码类组件/bas64编码.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip></Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>640,980</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>8</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>编码失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>编码成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>编码前字符串</Name>
          <Key>sourceString</Key>
          <Arg>__REQ__["aumsJWT_header_json"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </InArgs>
      <OutArgs>
        <Arg>
          <Name>编码后字符串</Name>
          <Key>outStr</Key>
          <Arg>__REQ__["aumsJWT_header_base64"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </OutArgs>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>8</RET1>
      </Logic>
    </Node>
    <Node>
      <UUID>6B88121780EE4855A2199CC6CCBA99BA</UUID>
      <Ref>DCB4A4960D907C3B5B64BBA8372B8E71</Ref>
      <Id>5</Id>
      <Name>bas64编码</Name>
      <Desp>bas64编码</Desp>
      <Level>0</Level>
      <Group>解编码类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_CodecTools.b64Encode</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/解编码类组件/bas64编码.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip></Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>660,1180</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>12</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>编码失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>编码成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>编码前字符串</Name>
          <Key>sourceString</Key>
          <Arg>__REQ__["aumsJWT_playload_json"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </InArgs>
      <OutArgs>
        <Arg>
          <Name>编码后字符串</Name>
          <Key>outStr</Key>
          <Arg>__REQ__["aumsJWT_playload_base64"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </OutArgs>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>12</RET1>
      </Logic>
    </Node>
    <Node>
      <UUID>77FF8410B2164644B1E460AD2E3C0E62</UUID>
      <Ref>94C4D8A9437DEE48BFC68257EB8972E6</Ref>
      <Id>6</Id>
      <Name>javaDict转换json串</Name>
      <Desp>javaDict转换json串</Desp>
      <Level>0</Level>
      <Group>json转换类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_Json.dictToStr</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/json转换类组件/javaDict转换json串.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>平台字典数据结构的对象转换成json字符串</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>656,866</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>1</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>字典</Name>
          <Key>dict</Key>
          <Arg>__REQ__["aumsJWT_header"]</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaDict</Type>
        </Arg>
      </InArgs>
      <OutArgs>
        <Arg>
          <Name>json字符串</Name>
          <Key>jsonStr</Key>
          <Arg>__REQ__["aumsJWT_header_json"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </OutArgs>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>1</RET1>
      </Logic>
    </Node>
    <Node>
      <Ref>94C4D8A9437DEE48BFC68257EB8972E6</Ref>
      <Id>8</Id>
      <Name>javaDict转换json串</Name>
      <Desp>javaDict转换json串</Desp>
      <Level>0</Level>
      <Group>json转换类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_Json.dictToStr</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/json转换类组件/javaDict转换json串.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>平台字典数据结构的对象转换成json字符串</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>680,1080</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>5</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>字典</Name>
          <Key>dict</Key>
          <Arg>__REQ__["aumsJWT_playload"]</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaDict</Type>
        </Arg>
      </InArgs>
      <OutArgs>
        <Arg>
          <Name>json字符串</Name>
          <Key>jsonStr</Key>
          <Arg>__REQ__["aumsJWT_playload_json"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </OutArgs>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>5</RET1>
      </Logic>
    </Node>
    <Node>
      <Ref>C66D34E5490B981A0C6454FE813E25BF</Ref>
      <Id>11</Id>
      <Name>容器变量赋值</Name>
      <Desp>token赋值</Desp>
      <Level>0</Level>
      <Group>字典处理类组件</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.platform.P_Dict.setValue</Target>
      <FilePath>/functionModule/technologyComponent/platform/registerInfo/字典处理类组件/容器变量赋值.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>容器变量赋值</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>677,1360</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>2</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>W</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>请求容器</Name>
          <Key>inContext</Key>
          <Arg>__REQ__</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaDict</Type>
        </Arg>
        <Arg>
          <Name>变量赋值列表，如：[[key1,value1],[key2,value2],[key3,value3]...]</Name>
          <Key>paramList</Key>
          <Arg>[ 
["aumsToken",__REQ__["aumsJWT_header_base64"].toString()+"."+__REQ__["aumsJWT_playload_base64"].toString()+"."+__REQ__["aumsJWT_signature"].toString()]
]</Arg>
          <Level>4</Level>
          <Type>cn.com.agree.afa.svc.javaengine.context.JavaList</Type>
        </Arg>
      </InArgs>
      <OutArgs/>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>2</RET1>
      </Logic>
    </Node>
    <Node>
      <UUID>E6FA2238B58A4F328D0EFCCEB67AE650</UUID>
      <Ref>C50963DE9CCE7F5461F98A548A71E9A8</Ref>
      <Id>12</Id>
      <Name>SHA256加密</Name>
      <Desp>SHA256加密</Desp>
      <Level>1</Level>
      <Group>对象操作类</Group>
      <Sql></Sql>
      <Type>11</Type>
      <Target>tc.bank.product.B_ObjectOperate.getSHA256StrJava</Target>
      <FilePath>/functionModule/technologyComponent/bank/registerInfo/对象操作类/SHA256加密.tcpt</FilePath>
      <Style>3</Style>
      <Tooltip>SHA256加密</Tooltip>
      <Skip>
        <Enabled>0</Enabled>
        <Branch>1</Branch>
      </Skip>
      <IsDebug>0</IsDebug>
      <Debug>
        <Codes>
          <Total>0</Total>
        </Codes>
        <Result>1</Result>
        <Return></Return>
        <ReturnList/>
      </Debug>
      <Constraint>
        <Location>660,1280</Location>
        <Size>160,46</Size>
      </Constraint>
      <Async>0</Async>
      <SourceConnections>
        <Connection>
          <targetId>11</targetId>
          <SourceTerminal>1</SourceTerminal>
          <TargetTerminal>N</TargetTerminal>
        </Connection>
      </SourceConnections>
      <Terminals>
        <Terminal>
          <Name>0</Name>
          <Desp>失败</Desp>
        </Terminal>
        <Terminal>
          <Name>1</Name>
          <Desp>成功</Desp>
        </Terminal>
      </Terminals>
      <InArgs>
        <Arg>
          <Name>字符串</Name>
          <Key>origString</Key>
          <Arg>__REQ__["aumsJWT_header_base64"].toString()+__REQ__["aumsJWT_playload_base64"].toString()+"aums"</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </InArgs>
      <OutArgs>
        <Arg>
          <Name>加密后字符串</Name>
          <Key>SHA256String</Key>
          <Arg>__REQ__["aumsJWT_signature"]</Arg>
          <Level>4</Level>
          <Type>java.lang.String</Type>
        </Arg>
      </OutArgs>
      <AspectUsed>0</AspectUsed>
      <Logic>
        <Total>1</Total>
        <RET1>11</RET1>
      </Logic>
    </Node>
    <Usage>1</Usage>
  </Implementation>
</Component>
